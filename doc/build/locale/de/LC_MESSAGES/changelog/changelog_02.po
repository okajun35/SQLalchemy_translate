# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, the SQLAlchemy authors and contributors
# This file is distributed under the same license as the SQLAlchemy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SQLAlchemy 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-06 18:59+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../changelog/changelog_02.rst:4
msgid "0.2 Changelog"
msgstr ""

#: ../../changelog/changelog_02.rst:15
msgid ""
"cleanup on connection methods + documentation.  custom DBAPI arguments "
"specified in query string, 'connect_args' argument to 'create_engine', or"
" custom creation function via 'creator' function to 'create_engine'."
msgstr ""

#: ../../changelog/changelog_02.rst:24
msgid ""
"added \"recycle\" argument to Pool, is \"pool_recycle\" on create_engine,"
" defaults to 3600 seconds; connections after this age will be closed and "
"replaced with a new one, to handle db's that automatically close stale "
"connections"
msgstr ""

#: ../../changelog/changelog_02.rst:33
msgid ""
"changed \"invalidate\" semantics with pooled connection; will instruct "
"the underlying connection record to reconnect the next time its called.  "
"\"invalidate\" will also automatically be called if any error is thrown "
"in the underlying call to connection.cursor(). this will hopefully allow "
"the connection pool to reconnect to a database that had been stopped and "
"started without restarting the connecting application"
msgstr ""

#: ../../changelog/changelog_02.rst:45
msgid "eesh !  the tutorial doctest was broken for quite some time."
msgstr ""

#: ../../changelog/changelog_02.rst:51
msgid ""
"add_property() method on mapper does a \"compile all mappers\" step in "
"case the given property references a non-compiled mapper (as it did in "
"the case of the tutorial !)"
msgstr ""

#: ../../changelog/changelog_02.rst:59
msgid "check for pg sequence already existing before create"
msgstr ""

#: ../../changelog/changelog_02.rst:65
msgid ""
"if a contextual session is established via MapperExtension.get_session "
"(as it is using the sessioncontext plugin, etc), a lazy load operation "
"will use that session by default if the parent object is not persistent "
"with a session already."
msgstr ""

#: ../../changelog/changelog_02.rst:74
msgid ""
"lazy loads will not fire off for an object that does not have a database "
"identity (why? see "
"http://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData)"
msgstr ""

#: ../../changelog/changelog_02.rst:82
msgid ""
"unit-of-work does a better check for \"orphaned\" objects that are part "
"of a \"delete-orphan\" cascade, for certain conditions where the parent "
"isn't available to cascade from."
msgstr ""

#: ../../changelog/changelog_02.rst:90
msgid ""
"mappers can tell if one of their objects is an \"orphan\" based on "
"interactions with the attribute package. this check is based on a status "
"flag maintained for each relationship when objects are attached and "
"detached from each other."
msgstr ""

#: ../../changelog/changelog_02.rst:99
msgid ""
"it is now invalid to declare a self-referential relationship with "
"\"delete-orphan\" (as the abovementioned check would make them impossible"
" to save)"
msgstr ""

#: ../../changelog/changelog_02.rst:107
msgid ""
"improved the check for objects being part of a session when the unit of "
"work seeks to flush() them as part of a relationship.."
msgstr ""

#: ../../changelog/changelog_02.rst:114
msgid ""
"statement execution supports using the same BindParam object more than "
"once in an expression; simplified handling of positional parameters.  "
"nice job by Bill Noon figuring out the basic idea."
msgstr ""

#: ../../changelog/changelog_02.rst:122
msgid ""
"postgres reflection moved to use pg_schema tables, can be overridden with"
" use_information_schema=True argument to create_engine."
msgstr ""

#: ../../changelog/changelog_02.rst:129
msgid ""
"added case_sensitive argument to MetaData, Table, Column, determines "
"itself automatically based on if a parent schemaitem has a non-None "
"setting for the flag, or if not, then whether the identifier name is all "
"lower case or not.  when set to True, quoting is applied to identifiers "
"with mixed or uppercase identifiers.  quoting is also applied "
"automatically in all cases to identifiers that are known to be reserved "
"words or contain other non-standard characters. various database dialects"
" can override all of this behavior, but currently they are all using the "
"default behavior.  tested with postgres, mysql, sqlite, oracle.  needs "
"more testing with firebird, ms-sql. part of the ongoing work with"
msgstr ""

#: ../../changelog/changelog_02.rst:144
msgid ""
"unit tests updated to run without any pysqlite installed; pool test uses "
"a mock DBAPI"
msgstr ""

#: ../../changelog/changelog_02.rst:151
msgid "urls support escaped characters in passwords"
msgstr ""

#: ../../changelog/changelog_02.rst:157
msgid "added limit/offset to UNION queries (though not yet in oracle)"
msgstr ""

#: ../../changelog/changelog_02.rst:163
msgid ""
"added \"timezone=True\" flag to DateTime and Time types.  postgres so far"
" will convert this to \"TIME[STAMP] (WITH|WITHOUT) TIME ZONE\", so that "
"control over timezone presence is more controllable (psycopg2 returns "
"datetimes with tzinfo's if available, which can create confusion against "
"datetimes that don't)."
msgstr ""

#: ../../changelog/changelog_02.rst:173
msgid ""
"fix to using query.count() with distinct, \\**kwargs with SelectResults "
"count()"
msgstr ""

#: ../../changelog/changelog_02.rst:180
msgid "deregister Table from MetaData when autoload fails;"
msgstr ""

#: ../../changelog/changelog_02.rst:186
msgid "import of py2.5s sqlite3"
msgstr ""

#: ../../changelog/changelog_02.rst:192
msgid "unicode fix for startswith()/endswith()"
msgstr ""

#: ../../changelog/changelog_02.rst:202
msgid ""
"quoting facilities set up so that database-specific quoting can be turned"
" on for individual table, schema, and column identifiers when used in all"
" queries/creates/drops.  Enabled via \"quote=True\" in Table or Column, "
"as well as \"quote_schema=True\" in Table.  Thanks to Aaron Spike for the"
" excellent efforts."
msgstr ""

#: ../../changelog/changelog_02.rst:212
msgid ""
"assignmapper was setting is_primary=True, causing all sorts of mayhem by "
"not raising an error when redundant mappers were set up, fixed"
msgstr ""

#: ../../changelog/changelog_02.rst:219
msgid ""
"added allow_null_pks option to Mapper, allows rows where some primary key"
" columns are null (i.e. when mapping to outer joins etc)"
msgstr ""

#: ../../changelog/changelog_02.rst:226
msgid ""
"modifcation to unitofwork to not maintain ordering within the \"new\" "
"list or within the UOWTask \"objects\" list; instead, new objects are "
"tagged with an ordering identifier as they are registered as new with the"
" session, and the INSERT statements are then sorted within the mapper "
"save_obj.  the INSERT ordering has basically been pushed all the way to "
"the end of the flush cycle. that way the various sorts and organizations "
"occurring within UOWTask (particularly the circular task sort) don't have"
" to worry about maintaining order (which they weren't anyway)"
msgstr ""

#: ../../changelog/changelog_02.rst:239
msgid ""
"fixed reflection of foreign keys to autoload the referenced table if it "
"was not loaded already"
msgstr ""

#: ../../changelog/changelog_02.rst:246
msgid "pass URL query string arguments to connect() function"
msgstr ""

#: ../../changelog/changelog_02.rst:252
msgid "oracle boolean type"
msgstr ""

#: ../../changelog/changelog_02.rst:258
msgid ""
"custom primary/secondary join conditions in a relation *will* be "
"propagated to backrefs by default.  specifying a backref() will override "
"this behavior."
msgstr ""

#: ../../changelog/changelog_02.rst:265
msgid ""
"better check for ambiguous join conditions in sql.Join; propagates to a "
"better error message in PropertyLoader (i.e. relation()/backref()) for "
"when the join condition can't be reasonably determined."
msgstr ""

#: ../../changelog/changelog_02.rst:273
msgid ""
"sqlite creates ForeignKeyConstraint objects properly upon table "
"reflection."
msgstr ""

#: ../../changelog/changelog_02.rst:280
msgid ""
"adjustments to pool stemming from changes made for. overflow counter "
"should only be decremented if the connection actually succeeded.  added a"
" test script to attempt testing this."
msgstr ""

#: ../../changelog/changelog_02.rst:288
msgid "fixed mysql reflection of default values to be PassiveDefault"
msgstr ""

#: ../../changelog/changelog_02.rst:294
msgid "added reflected 'tinyint', 'mediumint' type to MS-SQL."
msgstr ""

#: ../../changelog/changelog_02.rst:300
msgid ""
"SingletonThreadPool has a size and does a cleanup pass, so that only a "
"given number of thread-local connections stay around (needed for sqlite "
"applications that dispose of threads en masse)"
msgstr ""

#: ../../changelog/changelog_02.rst:308
msgid "fixed small pickle bug(s) with lazy loaders"
msgstr ""

#: ../../changelog/changelog_02.rst:314
msgid ""
"fixed possible error in mysql reflection where certain versions return an"
" array instead of string for SHOW CREATE TABLE call"
msgstr ""

#: ../../changelog/changelog_02.rst:321
msgid "fix to lazy loads when mapping to joins"
msgstr ""

#: ../../changelog/changelog_02.rst:327
msgid ""
"all create()/drop() calls have a keyword argument of \"connectable\". "
"\"engine\" is deprecated."
msgstr ""

#: ../../changelog/changelog_02.rst:334
msgid "fixed ms-sql connect() to work with adodbapi"
msgstr ""

#: ../../changelog/changelog_02.rst:340
msgid "added \"nowait\" flag to Select()"
msgstr ""

#: ../../changelog/changelog_02.rst:346
msgid ""
"inheritance check uses issubclass() instead of direct __mro__ check to "
"make sure class A inherits from B, allowing mapper inheritance to more "
"flexibly correspond to class inheritance"
msgstr ""

#: ../../changelog/changelog_02.rst:354
msgid ""
"SelectResults will use a subselect, when calling an aggregate (i.e. max, "
"min, etc.) on a SelectResults that has an ORDER BY clause"
msgstr ""

#: ../../changelog/changelog_02.rst:361
msgid ""
"fixes to types so that database-specific types more easily used; fixes to"
" mysql text types to work with this methodology"
msgstr ""

#: ../../changelog/changelog_02.rst:368
msgid "some fixes to sqlite date type organization"
msgstr ""

#: ../../changelog/changelog_02.rst:374
msgid "added MSTinyInteger to MS-SQL"
msgstr ""

#: ../../changelog/changelog_02.rst:384
msgid ""
"big overhaul to schema to allow truly composite primary and foreign key "
"constraints, via new ForeignKeyConstraint and PrimaryKeyConstraint "
"objects. Existing methods of primary/foreign key creation have not been "
"changed but use these new objects behind the scenes.  table creation and "
"reflection is now more table oriented rather than column oriented."
msgstr ""

#: ../../changelog/changelog_02.rst:395
msgid ""
"overhaul to MapperExtension calling scheme, wasn't working very well "
"previously"
msgstr ""

#: ../../changelog/changelog_02.rst:402
msgid "tweaks to ActiveMapper, supports self-referential relationships"
msgstr ""

#: ../../changelog/changelog_02.rst:408
msgid ""
"slight rearrangement to objectstore (in activemapper/threadlocal) so that"
" the SessionContext is referenced by '.context' instead of subclassed "
"directly."
msgstr ""

#: ../../changelog/changelog_02.rst:416
msgid ""
"activemapper will use threadlocal's objectstore if the mod is activated "
"when activemapper is imported"
msgstr ""

#: ../../changelog/changelog_02.rst:423
msgid "small fix to URL regexp to allow filenames with '@' in them"
msgstr ""

#: ../../changelog/changelog_02.rst:429
msgid "fixes to Session expunge/update/etc...needs more cleanup."
msgstr ""

#: ../../changelog/changelog_02.rst:435
msgid "select_table mappers *still* weren't always compiling"
msgstr ""

#: ../../changelog/changelog_02.rst:441
msgid "fixed up Boolean datatype"
msgstr ""

#: ../../changelog/changelog_02.rst:447
msgid ""
"added count()/count_by() to list of methods proxied by assignmapper; this"
" also adds them to activemapper"
msgstr ""

#: ../../changelog/changelog_02.rst:454
msgid "connection exceptions wrapped in DBAPIError"
msgstr ""

#: ../../changelog/changelog_02.rst:460
msgid ""
"ActiveMapper now supports autoloading column definitions from the "
"database if you supply a __autoload__ = True attribute in your mapping "
"inner-class.  Currently this does not support reflecting any "
"relationships."
msgstr ""

#: ../../changelog/changelog_02.rst:469
msgid ""
"deferred column load could screw up the connection status in a flush() "
"under some circumstances, this was fixed"
msgstr ""

#: ../../changelog/changelog_02.rst:476
msgid "expunge() was not working with cascade, fixed."
msgstr ""

#: ../../changelog/changelog_02.rst:482
msgid "potential endless loop in cascading operations fixed."
msgstr ""

#: ../../changelog/changelog_02.rst:488
msgid ""
"added \"synonym()\" function, applied to properties to have a propname "
"the same as another, for the purposes of overriding props and allowing "
"the original propname to be accessible in select_by()."
msgstr ""

#: ../../changelog/changelog_02.rst:496
msgid ""
"fix to typing in clause construction which specifically helps type issues"
" with polymorphic_union (CAST/ColumnClause propagates its type to proxy "
"columns)"
msgstr ""

#: ../../changelog/changelog_02.rst:504
msgid ""
"mapper compilation work ongoing, someday it'll work....moved around the "
"initialization of MapperProperty objects to be after all mappers are "
"created to better handle circular compilations. do_init() method is "
"called on all properties now which are more aware of their \"inherited\" "
"status if so."
msgstr ""

#: ../../changelog/changelog_02.rst:514
msgid ""
"eager loads explicitly disallowed on self-referential relationships, or "
"relationships to an inheriting mapper (which is also self-referential)"
msgstr ""

#: ../../changelog/changelog_02.rst:521
msgid "reduced bind param size in query._get to appease the picky oracle"
msgstr ""

#: ../../changelog/changelog_02.rst:527
msgid ""
"added 'checkfirst' argument to table.create()/table.drop(), as well as "
"table.exists()"
msgstr ""

#: ../../changelog/changelog_02.rst:534
msgid "some other ongoing fixes to inheritance"
msgstr ""

#: ../../changelog/changelog_02.rst:540
msgid "attribute/backref/orphan/history-tracking tweaks as usual..."
msgstr ""

#: ../../changelog/changelog_02.rst:550
msgid ""
"fixed endless loop bug in select_by(), if the traversal hit two mappers "
"that referenced each other"
msgstr ""

#: ../../changelog/changelog_02.rst:557
msgid ""
"upgraded all unittests to insert './lib/' into sys.path, working around "
"new setuptools PYTHONPATH-killing behavior"
msgstr ""

#: ../../changelog/changelog_02.rst:564
msgid "further fixes with attributes/dependencies/etc...."
msgstr ""

#: ../../changelog/changelog_02.rst:570
msgid "improved error handling for when DynamicMetaData is not connected"
msgstr ""

#: ../../changelog/changelog_02.rst:576
msgid "MS-SQL support largely working (tested with pymssql)"
msgstr ""

#: ../../changelog/changelog_02.rst:582
msgid ""
"ordering of UPDATE and DELETE statements within groups is now in order of"
" primary key values, for more deterministic ordering"
msgstr ""

#: ../../changelog/changelog_02.rst:589
msgid ""
"after_insert/delete/update mapper extensions now called per object, not "
"per-object-per-table"
msgstr ""

#: ../../changelog/changelog_02.rst:596
msgid "further fixes/refactorings to mapper compilation"
msgstr ""

#: ../../changelog/changelog_02.rst:606
msgid ""
"try/except when the mapper sets init.__name__ on a mapped class, supports"
" python 2.3"
msgstr ""

#: ../../changelog/changelog_02.rst:613
msgid ""
"fixed bug where threadlocal engine would still autocommit despite a "
"transaction in progress"
msgstr ""

#: ../../changelog/changelog_02.rst:620
msgid ""
"lazy load and deferred load operations require the parent object to be in"
" a Session to do the operation; whereas before the operation would just "
"return a blank list or None, it now raises an exception."
msgstr ""

#: ../../changelog/changelog_02.rst:628
msgid ""
"Session.update() is slightly more lenient if the session to which the "
"given object was formerly attached to was garbage collected; otherwise "
"still requires you explicitly remove the instance from the previous "
"Session."
msgstr ""

#: ../../changelog/changelog_02.rst:637
msgid "fixes to mapper compilation, checking for more error conditions"
msgstr ""

#: ../../changelog/changelog_02.rst:643
msgid "small fix to eager loading combined with ordering/limit/offset"
msgstr ""

#: ../../changelog/changelog_02.rst:649
msgid ""
"utterly remarkable:  added a single space between 'CREATE TABLE' and "
"'(<the rest of it>' since *that's how MySQL indicates a non- reserved "
"word tablename.....*"
msgstr ""

#: ../../changelog/changelog_02.rst:657
msgid ""
"more fixes to inheritance, related to many-to-many relations properly "
"saving"
msgstr ""

#: ../../changelog/changelog_02.rst:664
msgid "fixed bug when specifying explicit module to mysql dialect"
msgstr ""

#: ../../changelog/changelog_02.rst:670
msgid ""
"when QueuePool times out it raises a TimeoutError instead of erroneously "
"making another connection"
msgstr ""

#: ../../changelog/changelog_02.rst:677
msgid ""
"Queue.Queue usage in pool has been replaced with a locally modified "
"version (works in py2.3/2.4!) that uses a threading.RLock for a mutex.  "
"this is to fix a reported case where a ConnectionFairy's __del__() method"
" got called within the Queue's get() method, which then returns its "
"connection to the Queue via the put() method, causing a reentrant hang "
"unless threading.RLock is used."
msgstr ""

#: ../../changelog/changelog_02.rst:688
msgid ""
"postgres will not place SERIAL keyword on a primary key column if it has "
"a foreign key constraint"
msgstr ""

#: ../../changelog/changelog_02.rst:695
msgid ""
"cursor() method on ConnectionFairy allows db-specific extension arguments"
" to be propagated"
msgstr ""

#: ../../changelog/changelog_02.rst:702
msgid "lazy load bind params properly propagate column type"
msgstr ""

#: ../../changelog/changelog_02.rst:708
msgid ""
"new MySQL types: MSEnum, MSTinyText, MSMediumText, MSLongText, etc. more "
"support for MS-specific length/precision params in numeric types patch "
"courtesy Mike Bernson"
msgstr ""

#: ../../changelog/changelog_02.rst:716
msgid "some fixes to connection pool invalidate()"
msgstr ""

#: ../../changelog/changelog_02.rst:726
msgid ""
"overhaul to mapper compilation to be deferred.  this allows mappers to be"
" constructed in any order, and their relationships to each other are "
"compiled when the mappers are first used."
msgstr ""

#: ../../changelog/changelog_02.rst:734
msgid ""
"fixed a pretty big speed bottleneck in cascading behavior particularly "
"when backrefs were in use"
msgstr ""

#: ../../changelog/changelog_02.rst:741
msgid ""
"the attribute instrumentation module has been completely rewritten; its "
"now a large degree simpler and clearer, slightly faster.  the \"history\""
" of an attribute is no longer micromanaged with each change and is "
"instead part of a \"CommittedState\" object created when the instance is "
"first loaded.  HistoryArraySet is gone, the behavior of list attributes "
"is now more open ended (i.e. they're not sets anymore)."
msgstr ""

#: ../../changelog/changelog_02.rst:752
msgid ""
"py2.4 \"set\" construct used internally, falls back to sets.Set when "
"\"set\" not available/ordering is needed."
msgstr ""

#: ../../changelog/changelog_02.rst:759
msgid ""
"fix to transaction control, so that repeated rollback() calls don't fail "
"(was failing pretty badly when flush() would raise an exception in a "
"larger try/except transaction block)"
msgstr ""

#: ../../changelog/changelog_02.rst:767
msgid ""
"\"foreignkey\" argument to relation() can also be a list.  fixed auto-"
"foreignkey detection"
msgstr ""

#: ../../changelog/changelog_02.rst:774
msgid ""
"fixed bug where tables with schema names weren't getting indexed in the "
"MetaData object properly"
msgstr ""

#: ../../changelog/changelog_02.rst:781
msgid ""
"fixed bug where Column with redefined \"key\" property wasn't getting "
"type conversion happening in the ResultProxy"
msgstr ""

#: ../../changelog/changelog_02.rst:788
msgid "fixed 'port' attribute of URL to be an integer if present"
msgstr ""

#: ../../changelog/changelog_02.rst:794
msgid ""
"fixed old bug where if a many-to-many table mapped as \"secondary\" had "
"extra columns, delete operations didn't work"
msgstr ""

#: ../../changelog/changelog_02.rst:801
msgid "bugfixes for mapping against UNION queries"
msgstr ""

#: ../../changelog/changelog_02.rst:807
msgid "fixed incorrect exception class thrown when no DB driver present"
msgstr ""

#: ../../changelog/changelog_02.rst:813
msgid ""
"added NonExistentTable exception thrown when reflecting a table that "
"doesn't exist"
msgstr ""

#: ../../changelog/changelog_02.rst:820
msgid ""
"small fix to ActiveMapper regarding one-to-one backrefs, other "
"refactorings"
msgstr ""

#: ../../changelog/changelog_02.rst:827
msgid ""
"overridden constructor in mapped classes gets __name__ and __doc__ from "
"the original class"
msgstr ""

#: ../../changelog/changelog_02.rst:834
msgid "fixed small bug in selectresult.py regarding mapper extension"
msgstr ""

#: ../../changelog/changelog_02.rst:840
msgid ""
"small tweak to cascade_mappers, not very strongly supported function at "
"the moment"
msgstr ""

#: ../../changelog/changelog_02.rst:847
msgid ""
"some fixes to between(), column.between() to propagate typing information"
" better"
msgstr ""

#: ../../changelog/changelog_02.rst:854
msgid "if an object fails to be constructed, is not added to the session"
msgstr ""

#: ../../changelog/changelog_02.rst:861
msgid ""
"CAST function has been made into its own clause object with its own "
"compilation function in ansicompiler; allows MySQL to silently ignore "
"most CAST calls since MySQL seems to only support the standard CAST "
"syntax with Date types. MySQL-compatible CAST support for strings, ints, "
"etc. a TODO"
msgstr ""

#: ../../changelog/changelog_02.rst:875
msgid ""
"big improvements to polymorphic inheritance behavior, enabling it to work"
" with adjacency list table structures"
msgstr ""

#: ../../changelog/changelog_02.rst:882
msgid ""
"major fixes and refactorings to inheritance relationships overall, more "
"unit tests"
msgstr ""

#: ../../changelog/changelog_02.rst:889
msgid "fixed \"echo_pool\" flag on create_engine()"
msgstr ""

#: ../../changelog/changelog_02.rst:895
msgid ""
"fix to docs, removed incorrect info that close() is unsafe to use with "
"threadlocal strategy (its totally safe !)"
msgstr ""

#: ../../changelog/changelog_02.rst:902
msgid "create_engine() can take URLs as string or unicode"
msgstr ""

#: ../../changelog/changelog_02.rst:908
msgid ""
"firebird support partially completed; thanks to James Ralston and Brad "
"Clements for their efforts."
msgstr ""

#: ../../changelog/changelog_02.rst:915
msgid ""
"Oracle url translation was broken, fixed, will feed host/port/sid into "
"cx_oracle makedsn() if 'database' field is present, else uses straight "
"TNS name from the 'host' field"
msgstr ""

#: ../../changelog/changelog_02.rst:923
msgid "fix to using unicode criterion for query.get()/query.load()"
msgstr ""

#: ../../changelog/changelog_02.rst:929
msgid ""
"count() function on selectables now uses table primary key or first "
"column instead of \"1\" for criterion, also uses label \"rowcount\" "
"instead of \"count\"."
msgstr ""

#: ../../changelog/changelog_02.rst:937
msgid ""
"got rudimental \"mapping to multiple tables\" functionality cleaned up, "
"more correctly documented"
msgstr ""

#: ../../changelog/changelog_02.rst:944
msgid ""
"restored global_connect() function, attaches to a DynamicMetaData "
"instance called \"default_metadata\".  leaving MetaData arg to Table out "
"will use the default metadata."
msgstr ""

#: ../../changelog/changelog_02.rst:952
msgid "fixes to session cascade behavior, entity_name propigation"
msgstr ""

#: ../../changelog/changelog_02.rst:958
msgid "reorganized unittests into subdirectories"
msgstr ""

#: ../../changelog/changelog_02.rst:964
msgid "more fixes to threadlocal connection nesting patterns"
msgstr ""

#: ../../changelog/changelog_02.rst:974
msgid "\"pool\" argument to create_engine() properly propagates"
msgstr ""

#: ../../changelog/changelog_02.rst:980
msgid ""
"fixes to URL, raises exception if not parsed, does not pass blank fields "
"along to the DB connect string (a string such as user:host@/db was "
"breaking on postgres)"
msgstr ""

#: ../../changelog/changelog_02.rst:988
msgid ""
"small fixes to Mapper when it inserts and tries to get new primary key "
"values back"
msgstr ""

#: ../../changelog/changelog_02.rst:995
msgid ""
"rewrote half of TLEngine, the ComposedSQLEngine used with "
"'strategy=\"threadlocal\"'.  it now properly implements engine.begin()/ "
"engine.commit(), which nest fully with connection.begin()/trans.commit()."
" added about six unittests."
msgstr ""

#: ../../changelog/changelog_02.rst:1004
msgid ""
"major \"duh\" in pool.Pool, forgot to put back the WeakValueDictionary. "
"unittest which was supposed to check for this was also silently missing "
"it.  fixed unittest to ensure that ConnectionFairy properly falls out of "
"scope."
msgstr ""

#: ../../changelog/changelog_02.rst:1013
msgid ""
"placeholder dispose() method added to SingletonThreadPool, doesn't do "
"anything yet"
msgstr ""

#: ../../changelog/changelog_02.rst:1020
msgid ""
"rollback() is automatically called when an exception is raised, but only "
"if there's no transaction in process (i.e. works more like autocommit)."
msgstr ""

#: ../../changelog/changelog_02.rst:1028
msgid "fixed exception raise in sqlite if no sqlite module present"
msgstr ""

#: ../../changelog/changelog_02.rst:1034
msgid "added extra example detail for association object doc"
msgstr ""

#: ../../changelog/changelog_02.rst:1040
msgid "Connection adds checks for already being closed"
msgstr ""

#: ../../changelog/changelog_02.rst:1050
msgid ""
"overhaul to Engine system so that what was formerly the SQLEngine is now "
"a ComposedSQLEngine which consists of a variety of components, including "
"a Dialect, ConnectionProvider, etc. This impacted all the db modules as "
"well as Session and Mapper."
msgstr ""

#: ../../changelog/changelog_02.rst:1059
msgid ""
"create_engine now takes only RFC-1738-style strings: "
"driver://user:password@host:port/database"
msgstr ""

#: ../../changelog/changelog_02.rst:1066
msgid ""
"total rewrite of connection-scoping methodology, Connection objects can "
"now execute clause elements directly, added explicit \"close\" as well as"
" support throughout Engine/ORM to handle closing properly, no longer "
"relying upon __del__ internally to return connections to the pool."
msgstr ""

#: ../../changelog/changelog_02.rst:1076
msgid ""
"overhaul to Session interface and scoping.  uses hibernate-style methods,"
" including query(class), save(), save_or_update(), etc. no threadlocal "
"scope is installed by default.  Provides a binding interface to specific "
"Engines and/or Connections so that underlying Schema objects do not need "
"to be bound to an Engine.  Added a basic SessionTransaction object that "
"can simplistically aggregate transactions across multiple engines."
msgstr ""

#: ../../changelog/changelog_02.rst:1088
msgid ""
"overhaul to mapper's dependency and \"cascade\" behavior; dependency "
"logic factored out of properties.py into a separate module "
"\"dependency.py\". \"cascade\" behavior is now explicitly controllable, "
"proper implementation of \"delete\", \"delete-orphan\", etc.  dependency "
"system can now determine at flush time if a child object has a parent or "
"not so that it makes better decisions on how that child should be updated"
" in the DB with regards to deletes."
msgstr ""

#: ../../changelog/changelog_02.rst:1099
msgid ""
"overhaul to Schema to build upon MetaData object instead of an Engine. "
"Entire SQL/Schema system can be used with no Engines whatsoever, executed"
" solely by an explicit Connection object.  the \"bound\" methodlogy "
"exists via the BoundMetaData for schema objects.  ProxyEngine is "
"generally not needed anymore and is replaced by DynamicMetaData."
msgstr ""

#: ../../changelog/changelog_02.rst:1109
msgid "true polymorphic behavior implemented, fixes"
msgstr ""

#: ../../changelog/changelog_02.rst:1115
msgid ""
"\"oid\" system has been totally moved into compile-time behavior; if they"
" are used in an order_by where they are not available, the order_by "
"doesn't get compiled, fixes"
msgstr ""

#: ../../changelog/changelog_02.rst:1123
msgid ""
"overhaul to packaging; \"mapping\" is now \"orm\", \"objectstore\" is now"
" \"session\", the old \"objectstore\" namespace gets loaded in via the "
"\"threadlocal\" mod if used"
msgstr ""

#: ../../changelog/changelog_02.rst:1131
msgid ""
"mods now called in via \"import <modname>\".  extensions favored over "
"mods as mods are globally-monkeypatching"
msgstr ""

#: ../../changelog/changelog_02.rst:1138
msgid "fix to add_property so that it propagates properties to inheriting mappers"
msgstr ""

#: ../../changelog/changelog_02.rst:1145
msgid ""
"backrefs create themselves against primary mapper of its originating "
"property, priamry/secondary join arguments can be specified to override. "
"helps their usage with polymorphic mappers"
msgstr ""

#: ../../changelog/changelog_02.rst:1153
msgid "\"table exists\" function has been implemented"
msgstr ""

#: ../../changelog/changelog_02.rst:1159
msgid "\"create_all/drop_all\" added to MetaData object"
msgstr ""

#: ../../changelog/changelog_02.rst:1165
msgid ""
"improvements and fixes to topological sort algorithm, as well as more "
"unit tests"
msgstr ""

#: ../../changelog/changelog_02.rst:1172
msgid ""
"tutorial page added to docs which also can be run with a custom doctest "
"runner to ensure its properly working.  docs generally overhauled to deal"
" with new code patterns"
msgstr ""

#: ../../changelog/changelog_02.rst:1180
msgid "many more fixes, refactorings."
msgstr ""

#: ../../changelog/changelog_02.rst:1186
msgid ""
"migration guide is available on the Wiki at "
"http://www.sqlalchemy.org/trac/wiki/02Migration"
msgstr ""

