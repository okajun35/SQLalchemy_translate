# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, the SQLAlchemy authors and contributors
# This file is distributed under the same license as the SQLAlchemy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SQLAlchemy 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-06 18:59+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../dialects/firebird.rst:4
msgid "Firebird"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:5
msgid "Firebird Dialects"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:7
msgid ""
"Firebird offers two distinct dialects_ (not to be confused with a "
"SQLAlchemy ``Dialect``):"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:11
msgid "dialect 1"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:11
msgid "This is the old syntax and behaviour, inherited from Interbase pre-6.0."
msgstr ""

#: of sqlalchemy.dialects.firebird.base:14
msgid "dialect 3"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:14
msgid "This is the newer and supported syntax, introduced in Interbase 6.0."
msgstr ""

#: of sqlalchemy.dialects.firebird.base:16
msgid ""
"The SQLAlchemy Firebird dialect detects these versions and adjusts its "
"representation of SQL accordingly.  However, support for dialect 1 is not"
" well tested and probably has incompatibilities."
msgstr ""

#: of sqlalchemy.dialects.firebird.base:22
msgid "Locking Behavior"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:24
msgid ""
"Firebird locks tables aggressively.  For this reason, a DROP TABLE may "
"hang until other transactions are released.  SQLAlchemy does its best to "
"release transactions as quickly as possible.  The most common cause of "
"hanging transactions is a non-fully consumed result set, i.e.::"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:33
msgid ""
"Where above, the ``ResultProxy`` has not been fully consumed.  The "
"connection will be returned to the pool and the transactional state "
"rolled back once the Python garbage collector reclaims the objects which "
"hold onto the connection, which often occurs asynchronously. The above "
"use case can be alleviated by calling ``first()`` on the ``ResultProxy`` "
"which will fetch the first row and immediately close all remaining "
"cursor/connection resources."
msgstr ""

#: of sqlalchemy.dialects.firebird.base:42
msgid "RETURNING support"
msgstr ""

#: of sqlalchemy.dialects.firebird.base:44
msgid ""
"Firebird 2.0 supports returning a result set from inserts, and 2.1 "
"extends that to deletes and updates. This is generically exposed by the "
"SQLAlchemy ``returning()`` method, such as::"
msgstr ""

#: ../../dialects/firebird.rst:9
msgid "fdb"
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:16
#: sqlalchemy.dialects.firebird.kinterbasdb:8
msgid "Arguments"
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:18
msgid ""
"The ``fdb`` dialect is based on the "
":mod:`sqlalchemy.dialects.firebird.kinterbasdb` dialect, however does not"
" accept every argument that Kinterbasdb does."
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:22
msgid ""
"``enable_rowcount`` - True by default, setting this to False disables the"
" usage of \"cursor.rowcount\" with the Kinterbasdb dialect, which "
"SQLAlchemy ordinarily calls upon automatically after any UPDATE or DELETE"
" statement.   When disabled, SQLAlchemy's ResultProxy will return -1 for "
"result.rowcount.   The rationale here is that Kinterbasdb requires a "
"second round trip to the database when .rowcount is called -  since "
"SQLA's resultproxy automatically closes the cursor after a non-result-"
"returning statement, rowcount must be called, if at all, before the "
"result object is returned.   Additionally, cursor.rowcount may not return"
" correct results with older versions of Firebird, and setting this flag "
"to False will also cause the SQLAlchemy ORM to ignore its usage. The "
"behavior can also be controlled on a per-execution basis using the "
"``enable_rowcount`` option with :meth:`.Connection.execution_options`::"
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:41
msgid ""
"``retaining`` - False by default.   Setting this to True will pass the "
"``retaining=True`` keyword argument to the ``.commit()`` and "
"``.rollback()`` methods of the DBAPI connection, which can improve "
"performance in some situations, but apparently with significant caveats. "
"Please read the fdb and/or kinterbasdb DBAPI documentation in order to "
"understand the implications of this flag."
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:48
msgid ""
"- ``retaining`` keyword argument specifying transaction retaining "
"behavior - in 0.8 it defaults to ``True`` for backwards compatibility."
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:52
msgid ""
"- the ``retaining`` flag defaults to ``False``. In 0.8 it defaulted to "
"``True``."
msgstr ""

#: of sqlalchemy.dialects.firebird.fdb:57
msgid ""
"http://pythonhosted.org/fdb/usage-guide.html#retaining-transactions - "
"information on the \"retaining\" flag."
msgstr ""

#: ../../dialects/firebird.rst:14
msgid "kinterbasdb"
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:10
msgid ""
"The Kinterbasdb backend accepts the ``enable_rowcount`` and ``retaining``"
" arguments accepted by the :mod:`sqlalchemy.dialects.firebird.fdb` "
"dialect. In addition, it also accepts the following:"
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:14
msgid ""
"``type_conv`` - select the kind of mapping done on the types: by default "
"SQLAlchemy uses 200 with Unicode, datetime and decimal support.  See the "
"linked documents below for further information."
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:18
msgid ""
"``concurrency_level`` - set the backend policy with regards to threading "
"issues: by default SQLAlchemy uses policy 1.  See the linked documents "
"below for further information."
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:24
msgid "http://sourceforge.net/projects/kinterbasdb"
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:26
msgid "http://kinterbasdb.sourceforge.net/dist_docs/usage.html#adv_param_conv_dynamic_type_translation"
msgstr ""

#: of sqlalchemy.dialects.firebird.kinterbasdb:28
msgid "http://kinterbasdb.sourceforge.net/dist_docs/usage.html#special_issue_concurrency"
msgstr ""

