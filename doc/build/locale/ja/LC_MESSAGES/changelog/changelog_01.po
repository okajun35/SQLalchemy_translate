# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, the SQLAlchemy authors and contributors
# This file is distributed under the same license as the SQLAlchemy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SQLAlchemy 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-06 18:59+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../changelog/changelog_01.rst:4
msgid "0.1 Changelog"
msgstr ""

#: ../../changelog/changelog_01.rst:15
msgid "some fixes to topological sort algorithm"
msgstr ""

#: ../../changelog/changelog_01.rst:21
msgid "added DISTINCT ON support to Postgres (just supply distinct=[col1,col2..])"
msgstr ""

#: ../../changelog/changelog_01.rst:27
#, python-format
msgid "added __mod__ (% operator) to sql expressions"
msgstr ""

#: ../../changelog/changelog_01.rst:33
msgid "\"order_by\" mapper property inherited from inheriting mapper"
msgstr ""

#: ../../changelog/changelog_01.rst:39
msgid "fix to column type used when mapper UPDATES/DELETEs"
msgstr ""

#: ../../changelog/changelog_01.rst:45
msgid "with convert_unicode=True, reflection was failing, has been fixed"
msgstr ""

#: ../../changelog/changelog_01.rst:51
msgid ""
"types types types!  still weren't working....have to use TypeDecorator "
"again :("
msgstr ""

#: ../../changelog/changelog_01.rst:57
msgid "mysql binary type converts array output to buffer, fixes PickleType"
msgstr ""

#: ../../changelog/changelog_01.rst:63
msgid "fixed the attributes.py memory leak once and for all"
msgstr ""

#: ../../changelog/changelog_01.rst:69
msgid "unittests are qualified based on the databases that support each one"
msgstr ""

#: ../../changelog/changelog_01.rst:75
msgid ""
"fixed bug where column defaults would clobber VALUES clause of insert "
"objects"
msgstr ""

#: ../../changelog/changelog_01.rst:81
msgid "fixed bug where table def w/ schema name would force engine connection"
msgstr ""

#: ../../changelog/changelog_01.rst:87
msgid "fix for parenthesis to work correctly with subqueries in INSERT/UPDATE"
msgstr ""

#: ../../changelog/changelog_01.rst:93
msgid "HistoryArraySet gets extend() method"
msgstr ""

#: ../../changelog/changelog_01.rst:99
msgid "fixed lazyload support for other comparison operators besides ="
msgstr ""

#: ../../changelog/changelog_01.rst:105
msgid ""
"lazyload fix where two comparisons in the join condition point to the "
"samem column"
msgstr ""

#: ../../changelog/changelog_01.rst:112
msgid ""
"added \"construct_new\" flag to mapper, will use __new__ to create "
"instances instead of __init__ (standard in 0.2)"
msgstr ""

#: ../../changelog/changelog_01.rst:119
msgid "added selectresults.py to SVN, missed it last time"
msgstr ""

#: ../../changelog/changelog_01.rst:125
msgid ""
"tweak to allow a many-to-many relationship from a table to itself via an "
"association table"
msgstr ""

#: ../../changelog/changelog_01.rst:132
msgid "small fix to \"translate_row\" function used by polymorphic example"
msgstr ""

#: ../../changelog/changelog_01.rst:138
msgid ""
"create_engine uses cgi.parse_qsl to read query string (out the window in "
"0.2)"
msgstr ""

#: ../../changelog/changelog_01.rst:144
msgid "tweaks to CAST operator"
msgstr ""

#: ../../changelog/changelog_01.rst:150
msgid ""
"fixed function names LOCAL_TIME/LOCAL_TIMESTAMP -> "
"LOCALTIME/LOCALTIMESTAMP"
msgstr ""

#: ../../changelog/changelog_01.rst:156
msgid "fixed order of ORDER BY/HAVING in compile"
msgstr ""

#: ../../changelog/changelog_01.rst:166
msgid "support for MS-SQL added courtesy Rick Morrison, Runar Petursson"
msgstr ""

#: ../../changelog/changelog_01.rst:172
msgid "the latest SQLSoup from J. Ellis"
msgstr ""

#: ../../changelog/changelog_01.rst:178
msgid "ActiveMapper has preliminary support for inheritance (Jeff Watkins)"
msgstr ""

#: ../../changelog/changelog_01.rst:184
msgid ""
"added a \"mods\" system which allows pluggable modules that "
"modify/augment core functionality, using the function "
"\"install_mods(\\*modnames)\"."
msgstr ""

#: ../../changelog/changelog_01.rst:191
msgid ""
"added the first \"mod\", SelectResults, which modifies mapper selects to "
"return generators that turn ranges into LIMIT/OFFSET queries (Jonas "
"Borgstr?"
msgstr ""

#: ../../changelog/changelog_01.rst:199
msgid ""
"factored out querying capabilities of Mapper into a separate Query object"
" which is Session-centric.  this improves the performance of "
"mapper.using(session) and makes other things possible."
msgstr ""

#: ../../changelog/changelog_01.rst:207
msgid ""
"objectstore/Session refactored, the official way to save objects is now "
"via the flush() method.  The begin/commit functionality of Session is "
"factored into LegacySession which is still established as the default "
"behavior, until the 0.2 series."
msgstr ""

#: ../../changelog/changelog_01.rst:216
msgid ""
"types system is bound to an engine at query compile time, not schema "
"construction time.  this simplifies the types system as well as the "
"ProxyEngine."
msgstr ""

#: ../../changelog/changelog_01.rst:223
msgid ""
"added 'version_id' keyword argument to mapper. this keyword should "
"reference a Column object with type Integer, preferably non-nullable, "
"which will be used on the mapped table to track version numbers. this "
"number is incremented on each save operation and is specified in the "
"UPDATE/DELETE conditions so that it factors into the returned row count, "
"which results in a ConcurrencyError if the value received is not the "
"expected count."
msgstr ""

#: ../../changelog/changelog_01.rst:234
msgid ""
"added 'entity_name' keyword argument to mapper. a mapper is now "
"associated with a class via the class object as well as an optional "
"entity_name parameter, which is a string defaulting to None. any number "
"of primary mappers can be created for a class, qualified by the entity "
"name. instances of those classes will issue all of their load and save "
"operations through their entity_name-qualified mapper, and maintain "
"separate a identity in the identity map for an otherwise equilvalent "
"object."
msgstr ""

#: ../../changelog/changelog_01.rst:246
msgid ""
"overhaul to the attributes system. code has been clarified, and also "
"fixed to support proper polymorphic behavior on object attributes."
msgstr ""

#: ../../changelog/changelog_01.rst:253
msgid "added \"for_update\" flag to Select objects"
msgstr ""

#: ../../changelog/changelog_01.rst:259
msgid "some fixes for backrefs"
msgstr ""

#: ../../changelog/changelog_01.rst:265
msgid "fix for postgres1 DateTime type"
msgstr ""

#: ../../changelog/changelog_01.rst:271
msgid "documentation pages mostly switched over to Markdown syntax"
msgstr ""

#: ../../changelog/changelog_01.rst:281
msgid ""
"added SQLSession concept to SQLEngine. this object keeps track of "
"retrieving a connection from the connection pool as well as an in-"
"progress transaction. methods push_session() and pop_session() added to "
"SQLEngine which push/pop a new SQLSession onto the engine, allowing "
"operation upon a second connection \"nested\" within the previous one, "
"allowing nested transactions. Other tricks are sure to come later "
"regarding SQLSession."
msgstr ""

#: ../../changelog/changelog_01.rst:292
msgid ""
"added nest_on argument to objectstore.Session. This is a single SQLEngine"
" or list of engines for which push_session()/pop_session() will be called"
" each time this Session becomes the active session (via "
"objectstore.push_session() or equivalent). This allows a unit of work "
"Session to take advantage of the nested transaction feature without "
"explicitly calling push_session/pop_session on the engine."
msgstr ""

#: ../../changelog/changelog_01.rst:303
msgid ""
"factored apart objectstore/unitofwork to separate \"Session scoping\" "
"from \"uow commit heavy lifting\""
msgstr ""

#: ../../changelog/changelog_01.rst:310
msgid ""
"added populate_instance() method to MapperExtension. allows an extension "
"to modify the population of object attributes. this method can call the "
"populate_instance() method on another mapper to proxy the attribute "
"population from one mapper to another; some row translation logic is also"
" built in to help with this."
msgstr ""

#: ../../changelog/changelog_01.rst:320
msgid ""
"fixed Oracle8-compatibility \"use_ansi\" flag which converts JOINs to "
"comparisons with the = and (+) operators, passes basic unittests"
msgstr ""

#: ../../changelog/changelog_01.rst:327
msgid "tweaks to Oracle LIMIT/OFFSET support"
msgstr ""

#: ../../changelog/changelog_01.rst:333
msgid ""
"Oracle reflection uses ALL_** views instead of USER_** to get larger list"
" of stuff to reflect from"
msgstr ""

#: ../../changelog/changelog_01.rst:340
msgid "fixes to Oracle foreign key reflection"
msgstr ""

#: ../../changelog/changelog_01.rst:346
msgid ""
"objectstore.commit(obj1, obj2,...) adds an extra step to seek out private"
" relations on properties and delete child objects, even though its not a "
"global commit"
msgstr ""

#: ../../changelog/changelog_01.rst:354
msgid ""
"lots and lots of fixes to mappers which use inheritance, strengthened the"
" concept of relations on a mapper being made towards the \"local\" table "
"for that mapper, not the tables it inherits.  allows more complex "
"compositional patterns to work with lazy/eager loading."
msgstr ""

#: ../../changelog/changelog_01.rst:363
msgid ""
"added support for mappers to inherit from others based on the same table,"
" just specify the same table as that of both parent/child mapper."
msgstr ""

#: ../../changelog/changelog_01.rst:370
msgid ""
"some minor speed improvements to the attributes system with regards to "
"instantiating and populating new objects."
msgstr ""

#: ../../changelog/changelog_01.rst:377
msgid "fixed MySQL binary unit test"
msgstr ""

#: ../../changelog/changelog_01.rst:383
msgid ""
"INSERTs can receive clause elements as VALUES arguments, not just literal"
" values"
msgstr ""

#: ../../changelog/changelog_01.rst:390
msgid "support for calling multi-tokened functions, i.e. schema.mypkg.func()"
msgstr ""

#: ../../changelog/changelog_01.rst:396
msgid "added J. Ellis' SQLSoup module to extensions package"
msgstr ""

#: ../../changelog/changelog_01.rst:402
msgid ""
"added \"polymorphic\" examples illustrating methods to load multiple "
"object types from one mapper, the second of which uses the new "
"populate_instance() method. small improvements to mapper, UNION construct"
" to help the examples along"
msgstr ""

#: ../../changelog/changelog_01.rst:410
msgid ""
"improvements/fixes to session.refresh()/session.expire() (which may have "
"been called \"invalidate\" earlier..)"
msgstr ""

#: ../../changelog/changelog_01.rst:417
msgid ""
"added session.expunge() which totally removes an object from the current "
"session"
msgstr ""

#: ../../changelog/changelog_01.rst:424
msgid ""
"added \\*args, \\**kwargs pass-thru to engine.transaction(func) allowing "
"easier creation of transactionalizing decorator functions"
msgstr ""

#: ../../changelog/changelog_01.rst:431
msgid "added iterator interface to ResultProxy:  \"for row in result:...\""
msgstr ""

#: ../../changelog/changelog_01.rst:437
msgid ""
"added assertion to tx = session.begin(); tx.rollback(); tx.begin(), i.e. "
"cant use it after a rollback()"
msgstr ""

#: ../../changelog/changelog_01.rst:444
msgid ""
"added date conversion on bind parameter fix to SQLite enabling dates to "
"work with pysqlite1"
msgstr ""

#: ../../changelog/changelog_01.rst:451
msgid ""
"improvements to subqueries to more intelligently construct their FROM "
"clauses"
msgstr ""

#: ../../changelog/changelog_01.rst:458
msgid "added PickleType to types."
msgstr ""

#: ../../changelog/changelog_01.rst:464
msgid ""
"fixed two bugs with column labels with regards to bind parameters: bind "
"param keynames they are now generated from a column \"label\" in all "
"relevant cases to take advantage of excess-name-length rules, and checks "
"for a peculiar collision against a column named the same as "
"\"tablename_colname\" added"
msgstr ""

#: ../../changelog/changelog_01.rst:473
msgid ""
"major overhaul to unit of work documentation, other documentation "
"sections."
msgstr ""

#: ../../changelog/changelog_01.rst:479
msgid ""
"fixed attributes bug where if an object is committed, its lazy-loaded "
"list got blown away if it hadn't been loaded"
msgstr ""

#: ../../changelog/changelog_01.rst:486
msgid ""
"added unique_connection() method to engine, connection pool to return a "
"connection that is not part of the thread-local context or any current "
"transaction"
msgstr ""

#: ../../changelog/changelog_01.rst:494
msgid ""
"added invalidate() function to pooled connection.  will remove the "
"connection from the pool.  still need work for engines to auto-reconnect "
"to a stale DB though."
msgstr ""

#: ../../changelog/changelog_01.rst:502
msgid ""
"added distinct() function to column elements so you can do "
"func.count(mycol.distinct())"
msgstr ""

#: ../../changelog/changelog_01.rst:509
msgid ""
"added \"always_refresh\" flag to Mapper, creates a mapper that will "
"always refresh the attributes of objects it gets/selects from the DB, "
"overwriting any changes made."
msgstr ""

#: ../../changelog/changelog_01.rst:521
msgid ""
"create_engine() now uses genericized parameters; host/hostname, "
"db/dbname/database, password/passwd, etc. for all engine connections. "
"makes engine URIs much more \"universal\""
msgstr ""

#: ../../changelog/changelog_01.rst:529
msgid ""
"added support for SELECT statements embedded into a column clause, using "
"the flag \"scalar=True\""
msgstr ""

#: ../../changelog/changelog_01.rst:536
msgid ""
"another overhaul to EagerLoading when used in conjunction with mappers "
"that inherit; improvements to eager loads figuring out their aliased "
"queries correctly, also relations set up against a mapper with inherited "
"mappers will create joins against the table that is specific to the "
"mapper itself (i.e. and not any tables that are inherited/are further "
"down the inheritance chain), this can be overridden by using custom "
"primary/secondary joins."
msgstr ""

#: ../../changelog/changelog_01.rst:547
msgid ""
"added J.Ellis patch to mapper.py so that selectone() throws an exception "
"if query returns more than one object row, selectfirst() to not throw the"
" exception. also adds selectfirst_by (synonymous with get_by) and "
"selectone_by"
msgstr ""

#: ../../changelog/changelog_01.rst:555
msgid ""
"added onupdate parameter to Column, will exec SQL/python upon an update "
"statement.Also adds \"for_update=True\" to all DefaultGenerator "
"subclasses"
msgstr ""

#: ../../changelog/changelog_01.rst:562
msgid ""
"added support for Oracle table reflection contributed by Andrija Zaric; "
"still some bugs to work out regarding composite primary keys/dictionary "
"selection"
msgstr ""

#: ../../changelog/changelog_01.rst:569
msgid "checked in an initial Firebird module, awaiting testing."
msgstr ""

#: ../../changelog/changelog_01.rst:575
msgid ""
"added sql.ClauseParameters dictionary object as the result for "
"compiled.get_params(), does late-typeprocessing of bind parameters so "
"that the original values are easier to access"
msgstr ""

#: ../../changelog/changelog_01.rst:583
msgid ""
"more docs for indexes, column defaults, connection pooling, engine "
"construction"
msgstr ""

#: ../../changelog/changelog_01.rst:589
msgid ""
"overhaul to the construction of the types system. uses a simpler "
"inheritance pattern so that any of the generic types can be easily "
"subclassed, with no need for TypeDecorator."
msgstr ""

#: ../../changelog/changelog_01.rst:597
msgid ""
"added \"convert_unicode=False\" parameter to SQLEngine, will cause all "
"String types to perform unicode encoding/decoding (makes Strings act like"
" Unicodes)"
msgstr ""

#: ../../changelog/changelog_01.rst:604
msgid ""
"added 'encoding=\"utf8\"' parameter to engine.  the given encoding will "
"be used for all encode/decode calls within Unicode types as well as "
"Strings when convert_unicode=True."
msgstr ""

#: ../../changelog/changelog_01.rst:612
msgid ""
"improved support for mapping against UNIONs, added polymorph.py example "
"to illustrate multi-class mapping against a UNION"
msgstr ""

#: ../../changelog/changelog_01.rst:619
msgid "fix to SQLite LIMIT/OFFSET syntax"
msgstr ""

#: ../../changelog/changelog_01.rst:625
msgid "fix to Oracle LIMIT syntax"
msgstr ""

#: ../../changelog/changelog_01.rst:631
msgid ""
"added backref() function, allows backreferences to have keyword arguments"
" that will be passed to the backref."
msgstr ""

#: ../../changelog/changelog_01.rst:638
msgid "Sequences and ColumnDefault objects can do execute()/scalar() standalone"
msgstr ""

#: ../../changelog/changelog_01.rst:644
msgid "SQL functions (i.e. func.foo()) can do execute()/scalar() standalone"
msgstr ""

#: ../../changelog/changelog_01.rst:650
msgid ""
"fix to SQL functions so that the ANSI-standard functions, i.e. "
"current_timestamp etc., do not specify parenthesis.  all other functions "
"do."
msgstr ""

#: ../../changelog/changelog_01.rst:657
msgid ""
"added settattr_clean and append_clean to SmartProperty, which set "
"attributes without triggering a \"dirty\" event or any history. used as: "
"myclass.prop1.setattr_clean(myobject, 'hi')"
msgstr ""

#: ../../changelog/changelog_01.rst:665
msgid ""
"improved support to column defaults when used by mappers; mappers will "
"pull pre-executed defaults from statement's executed bind parameters "
"(pre-conversion) to populate them into a saved object's attributes; if "
"any PassiveDefaults have fired off, will instead post-fetch the row from "
"the DB to populate the object."
msgstr ""

#: ../../changelog/changelog_01.rst:675
msgid ""
"added 'get_session().invalidate(\\*obj)' method to objectstore, instances"
" will refresh() themselves upon the next attribute access."
msgstr ""

#: ../../changelog/changelog_01.rst:682
msgid ""
"improvements to SQL func calls including an \"engine\" keyword argument "
"so they can be execute()d or scalar()ed standalone, also added func "
"accessor to SQLEngine"
msgstr ""

#: ../../changelog/changelog_01.rst:690
msgid "fix to MySQL4 custom table engines, i.e. TYPE instead of ENGINE"
msgstr ""

#: ../../changelog/changelog_01.rst:696
msgid ""
"slightly enhanced logging, includes timestamps and a somewhat "
"configurable formatting system, in lieu of a full-blown logging system"
msgstr ""

#: ../../changelog/changelog_01.rst:703
msgid ""
"improvements to the ActiveMapper class from the TG gang, including many-"
"to-many relationships"
msgstr ""

#: ../../changelog/changelog_01.rst:710
msgid "added Double and TinyInt support to mysql"
msgstr ""

#: ../../changelog/changelog_01.rst:720
msgid ""
"completed \"post_update\" feature, will add a second update statement "
"before inserts and after deletes in order to reconcile a relationship "
"without any dependencies being created; used when persisting two rows "
"that are dependent on each other"
msgstr ""

#: ../../changelog/changelog_01.rst:729
msgid ""
"completed mapper.using(session) function, localized per-object Session "
"functionality; objects can be declared and manipulated as local to any "
"user-defined Session"
msgstr ""

#: ../../changelog/changelog_01.rst:737
msgid "fix to Oracle \"row_number over\" clause with multiple tables"
msgstr ""

#: ../../changelog/changelog_01.rst:743
msgid ""
"mapper.get() was not selecting multiple-keyed objects if the mapper's "
"table was a join, such as in an inheritance relationship, this is fixed."
msgstr ""

#: ../../changelog/changelog_01.rst:750
msgid ""
"overhaul to sql/schema packages so that the sql package can run all on "
"its own, producing selects, inserts, etc. without any engine "
"dependencies.  builds upon new TableClause/ColumnClause lexical objects."
"  Schema's Table/Column objects are the \"physical\" subclasses of them."
"  simplifies schema/sql relationship, extensions (like proxyengine), and "
"speeds overall performance by a large margin. removes the entire "
"getattr() behavior that plagued 0.1.1."
msgstr ""

#: ../../changelog/changelog_01.rst:761
msgid ""
"refactoring of how the mapper \"synchronizes\" data between two objects "
"into a separate module, works better with properties attached to a mapper"
" that has an additional inheritance relationship to one of the related "
"tables, also the same methodology used to synchronize parent/child "
"objects now used by mapper to synchronize between inherited and "
"inheriting mappers."
msgstr ""

#: ../../changelog/changelog_01.rst:771
msgid ""
"made objectstore \"check for out-of-identitymap\" more aggressive, will "
"perform the check when object attributes are modified or the object is "
"deleted"
msgstr ""

#: ../../changelog/changelog_01.rst:778
msgid ""
"Index object fully implemented, can be constructed standalone, or via "
"\"index\" and \"unique\" arguments on Columns."
msgstr ""

#: ../../changelog/changelog_01.rst:785
msgid ""
"added \"convert_unicode\" flag to SQLEngine, will treat all String/CHAR "
"types as Unicode types, with raw-byte/utf-8 translation on the bind "
"parameter and result set side."
msgstr ""

#: ../../changelog/changelog_01.rst:793
msgid ""
"postgres maintains a list of ANSI functions that must have no parenthesis"
" so function calls with no arguments work consistently"
msgstr ""

#: ../../changelog/changelog_01.rst:800
msgid ""
"tables can be created with no engine specified.  this will default their "
"engine to a module-scoped \"default engine\" which is a ProxyEngine.  "
"this engine can be connected via the function \"global_connect\"."
msgstr ""

#: ../../changelog/changelog_01.rst:808
msgid ""
"added \"refresh(\\*obj)\" method to objectstore / Session to reload the "
"attributes of any set of objects from the database unconditionally"
msgstr ""

#: ../../changelog/changelog_01.rst:819
msgid ""
"fixed a recursive call in schema that was somehow running 994 times then "
"returning normally.  broke nothing, slowed down everything.  thanks to "
"jpellerin for finding this."
msgstr ""

#: ../../changelog/changelog_01.rst:830
msgid ""
"small fix to Function class so that expressions with a func.foo() use the"
" type of the Function object (i.e. the left side) as the type of the "
"boolean expression, not the other side which is more of a moving target "
"(changeset 1020)."
msgstr ""

#: ../../changelog/changelog_01.rst:838
msgid ""
"creating self-referring mappers with backrefs slightly easier (but still "
"not that easy - changeset 1019)"
msgstr ""

#: ../../changelog/changelog_01.rst:845
msgid "fixes to one-to-one mappings (changeset 1015)"
msgstr ""

#: ../../changelog/changelog_01.rst:851
msgid "psycopg1 date/time issue with None fixed (changeset 1005)"
msgstr ""

#: ../../changelog/changelog_01.rst:857
msgid ""
"two issues related to postgres, which doesn't want to give you the "
"\"lastrowid\" since oids are deprecated:"
msgstr ""

#: ../../changelog/changelog_01.rst:860
msgid ""
"postgres database-side defaults that are on primary key cols *do* execute"
" explicitly beforehand, even though that's not the idea of a "
"PassiveDefault.  this is because sequences on columns get reflected as "
"PassiveDefaults, but need to be explicitly executed on a primary key col "
"so we know what we just inserted."
msgstr ""

#: ../../changelog/changelog_01.rst:864
msgid ""
"if you did add a row that has a bunch of database-side defaults on it, "
"and the PassiveDefault thing was working the old way, i.e. they just "
"execute on the DB side, the \"cant get the row back without an OID\" "
"exception that occurred also will not happen unless someone (usually the "
"ORM) explicitly asks for it."
msgstr ""

#: ../../changelog/changelog_01.rst:873
msgid ""
"fixed a glitch with engine.execute_compiled where it was making a second "
"ResultProxy that just got thrown away."
msgstr ""

#: ../../changelog/changelog_01.rst:880
msgid ""
"began to implement newer logic in object properities.  you can now say "
"myclass.attr.property, which will give you the PropertyLoader "
"corresponding to that attribute, i.e. myclass.mapper.props['attr']"
msgstr ""

#: ../../changelog/changelog_01.rst:888
msgid ""
"eager loading has been internally overhauled to use aliases at all times."
"  more complicated chains of eager loads can now be created without any "
"need for explicit \"use aliases\"-type instructions.  EagerLoader code is"
" also much simpler now."
msgstr ""

#: ../../changelog/changelog_01.rst:896
msgid ""
"a new somewhat experimental flag \"use_update\" added to relations, "
"indicates that this relationship should be handled by a second UPDATE "
"statement, either after a primary INSERT or before a primary DELETE.  "
"handles circular row dependencies."
msgstr ""

#: ../../changelog/changelog_01.rst:904
msgid ""
"added exceptions module, all raised exceptions (except for some "
"KeyError/AttributeError exceptions) descend from these classes."
msgstr ""

#: ../../changelog/changelog_01.rst:911
msgid ""
"fix to date types with MySQL, returned timedelta converted to "
"datetime.time"
msgstr ""

#: ../../changelog/changelog_01.rst:917
msgid ""
"two-phase objectstore.commit operations (i.e. begin/commit) now return a "
"transactional object (SessionTrans), to more clearly indicate transaction"
" boundaries."
msgstr ""

#: ../../changelog/changelog_01.rst:924
msgid "Index object with create/drop support added to schema"
msgstr ""

#: ../../changelog/changelog_01.rst:930
msgid ""
"fix to postgres, where it will explicitly pre-execute a PassiveDefault on"
" a table if it is a primary key column, pursuant to the ongoing \"we cant"
" get inserted rows back from postgres\" issue"
msgstr ""

#: ../../changelog/changelog_01.rst:938
msgid ""
"change to information_schema query that gets back postgres table defs, "
"now uses explicit JOIN keyword, since one user had faster performance "
"with 8.1"
msgstr ""

#: ../../changelog/changelog_01.rst:945
msgid ""
"fix to engine.process_defaults so it works correctly with a table that "
"has different column name/column keys (changset 982)"
msgstr ""

#: ../../changelog/changelog_01.rst:952
msgid "a column can only be attached to one table - this is now asserted"
msgstr ""

#: ../../changelog/changelog_01.rst:958
msgid "postgres time types descend from Time type"
msgstr ""

#: ../../changelog/changelog_01.rst:964
msgid "fix to alltests so that it runs types test (now named testtypes)"
msgstr ""

#: ../../changelog/changelog_01.rst:970
msgid "fix to Join object so that it correctly exports its foreign keys (cs 973)"
msgstr ""

#: ../../changelog/changelog_01.rst:976
msgid "creating relationships against mappers that use inheritance fixed (cs 973)"
msgstr ""

